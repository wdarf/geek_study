"""Реализовать функцию, принимающую два числа (позиционные аргументы) и выполняющую их деление. Числа запрашивать у
пользователя, предусмотреть обработку ситуации деления на ноль"""


def my_func():
    try:
        num1 = float(input("Введи первое число: "))
        num2 = float(input("Введи второе число: "))
        return num1/num2
    except ZeroDivisionError:
        print("Ты пытаешься делить на ноль.  Введи другое число.")
        return my_func()


print(my_func())


"""Реализовать функцию, принимающую несколько параметров, описывающих данные пользователя: имя, фамилия, год рождения, 
город проживания, email, телефон. Функция должна принимать параметры как именованные аргументы. Реализовать вывод данных
 о пользователе одной строкой"""


def character(**kwargs):
    for key, value in kwargs.items():
        print("{} - {}".format(key, value), end=", ")


print(character(Имя="Геральт", Фамилия="Неизвестна", Возраст=50, Город="Неизвестен", Страна="Ривия",
                Электропочта="whitewolf@kaer-morkhen.kd", Телефон=+71112223344))


"""Реализовать функцию my_func(), которая принимает три позиционных аргумента, и возвращает сумму наибольших двух
аргументов."""


def my_func(arg1, arg2, arg3):
    summa = [arg1, arg2, arg3]
    summa.remove(min(arg1, arg2, arg3))
    return sum(summa)


print(my_func(70, 20, 14))


"""Программа принимает действительное положительное число x и целое отрицательное число y. Необходимо выполнить 
возведение числа x в степень y. Задание необходимо реализовать в виде функции my_func(x, y). При решении задания 
необходимо обойтись без встроенной функции возведения числа в степень.
Подсказка: попробуйте решить задачу двумя способами. Первый — возведение в степень с помощью оператора **. 
Второй — более сложная реализация без оператора **, предусматривающая использование цикла."""


def my_func(x, y):
    stepen = 1/abs(x) ** abs(y)
    return stepen


print(my_func(2, -5))


# второй вариант


def stepen(x, y):
    result = 1
    for i in range(abs(y)):
        result *= x
    if y >= 0:
        return result
    else:
        return 1 / result


print(stepen(2, -5))


"""Программа запрашивает у пользователя строку чисел, разделенных пробелом. При нажатии Enter должна выводиться сумма 
чисел. Пользователь может продолжить ввод чисел, разделенных пробелом и снова нажать Enter. Сумма вновь введенных чисел 
будет добавляться к уже подсчитанной сумме. Но если вместо числа вводится специальный символ, выполнение программы 
завершается. Если специальный символ введен после нескольких чисел, то вначале нужно добавить сумму этих чисел к 
полученной ранее сумме и после этого завершить программу."""


def summa():
    result = 0
    while True:
        numbers = input('Введите несколько чисел через пробел или нажмите Q для выхода').split()
        for i in numbers:
            try:
                if i == 'Q':
                    print(f'Сумма чисел равна {result}.')
                    return
                else:
                    result += int(i)
            except ValueError:
                print('Введите число или нажмите Q')
        print(f'Сумма чисел равна {result}')


print(summa())


"""Реализовать функцию int_func(), принимающую слово из маленьких латинских букв и возвращающую его же, но с прописной 
первой буквой. Например, print(int_func(‘text’)) -> Text.
Продолжить работу над заданием. В программу должна попадать строка из слов, разделенных пробелом. Каждое слово состоит 
из латинских букв в нижнем регистре. Сделать вывод исходной строки, но каждое слово должно начинаться с заглавной буквы.
 Необходимо использовать написанную ранее функцию int_func()"""


def int_func():
    import string
    sentence = input("Введите слова на латинском: ")
    formatted = string.capwords(sentence, sep=None)
    print(formatted)

print(int_func())
